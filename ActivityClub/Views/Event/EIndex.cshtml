@model IEnumerable<ActivityClub.Models.EventViewModel>

@{
    ViewData["Title"] = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <!-- Events -->
        <div class="col-md-8">
            <h2>Events</h2>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="events-list">
                    @foreach (var item in Model)
                    {
                        <div class="event-item">
                            <div class="event-details">
                                <h3>@item.EventName</h3>
                                <p>@item.EventDes</p>
                                <p><strong>Category:</strong> @(item.CategoryLookup?.LookupName ?? "No Category")</p>
                                <p><strong>Destination:</strong> @item.Destination</p>
                                <p><strong>Date From:</strong> @item.DateFrom.ToShortDateString()</p>
                                <p><strong>Date To:</strong> @item.DateTo.ToShortDateString()</p>
                                <p><strong>Cost:</strong> @item.Cost.ToString("C")</p>
                                <p><strong>Status:</strong> @item.Stat</p>

                                <h4>Guides</h4>
                                <ul class="guide-list">
                                    @foreach (var guide in item.EventGuides.Select(eg => eg.Guide).Where(g => g != null))
                                    {
                                        <li>
                                            <a href="#" class="guide-link" data-guide-id="@guide.GuideID">@guide.FullName</a>
                                        </li>
                                    }
                                </ul>

                                <div class="guide-info-container"></div>
                            </div>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <form asp-action="Register" method="post" class="join-form">
                                    <input type="hidden" name="eventId" value="@item.EventID" />
                                    <button type="submit" class="join-btn">Join Event</button>
                                </form>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No events available.</p>
            }
        </div>

        <!-- Guides -->
        <div class="col-md-4">
            <h2>Guides</h2>
            @if (ViewBag.Guides != null && ((List<ActivityClub.Models.Guide>)ViewBag.Guides).Any())
            {
                <ul class="list-group guide-list">
                    @foreach (var guide in ViewBag.Guides as List<ActivityClub.Models.Guide>)
                    {
                        <li class="list-group-item">
                            <p><img src="/images/profile(1).png" id="guide-profile-img" alt="Photo"></p>
                            <h5>@guide.FullName</h5>
                            
                            <a href="@Url.Action("GuideDetails", "Event", new { id = guide.GuideID })" class="btn btn-primary btn-sm">View Details</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No guides available.</p>
            }
        </div>
    </div>
</div>

<style>
    .container {
        margin-top: 30px;
        font-family: 'Roboto', sans-serif;
        display: flex;
        flex-direction: column;
    }
    .row{
        display: flex;
        justify-content: space-around;
    }
    .events-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
        
    }

    .event-item {
        background: #202124;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin: 10px;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .event-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

    .event-details h3 {
        margin-bottom: 15px;
        font-size: 1.5rem;
        color: white;
    }

    .event-details p, h4{
        margin: 5px 0;
        color: white;
        
    }

    .guide-list {
        list-style: none;
        padding: 20px;
    }

        .guide-list li {
            padding: 10px 10px;
        }
        .guide-list h5{
            padding-left: 15px;
        }

    #guide-profile-img{
        width: 40px;
        height: 40px;
        
        border-end-start-radius: 200px;
        border-end-end-radius: 200px;
        border-start-start-radius: 20px;
        border-start-end-radius: 20px
    }

        #guide-profile-img:hover{
            background: white;
        }

    

    .join-btn {
        background-color: #202124;
        color: white;
        padding: 10px 15px;
        
        border-radius: 5px ;
        cursor: pointer;
        transition: background-color 0.3s;
        border: 2px solid red;
    }

        .join-btn:hover {
            background-color: red;
        }

    .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        background-color: #202124;
        border-radius: 10px;
        margin-bottom: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .list-group-item h5 {
            margin: 0;
            font-size: 1.2rem;
            color: white;
        }

        .list-group-item p {
            margin: 5px 0;
            font-size: 0.9rem;
            color: white;
        }

        .list-group-item .btn {
            padding: 20px;
            font-size: 0.85rem;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

    .alert {
        color: white;
        margin: 20px;
        background: red;
        padding: 10px;
        border-radius: 10px;
    }

    footer {
        background: #202124;
        color: #fff;
        padding: 0.5rem;
        text-align: center;
        width: 100%;
        margin-top: auto;
    }


</style>


<script>
    function joinEvent(eventId) {
        fetch('/Event/Register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ EventID: eventId })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('You have successfully joined the event.');
                    window.location.reload();
                } else {
                    alert('An error occurred: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while joining the event.');
            });
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('.guide-link').forEach(function (link) {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                var guideId = this.getAttribute('data-guide-id');
                fetch('@Url.Action("GetGuideInfo", "Event")?guideId=' + guideId)
                    .then(response => response.text())
                    .then(data => {
                        var container = this.closest('.event-details').querySelector('.guide-info-container');
                        container.innerHTML = data;
                    });
            });
        });
    });
</script>
